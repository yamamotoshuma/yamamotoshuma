name: Main
on:
  # run automatically every 24 hours
  schedule:
    - cron: "0 0 * * *"

  # allows to manually run the job at any time
  workflow_dispatch:

  # run on every push on the main branch
  # don't forget to change if you're using 'master' branch
  push:
    branches:
    - main
jobs:
  github-metrics:
    runs-on: ubuntu-latest
    steps:
    - name: Default metrics
      uses: lowlighter/metrics@latest
      with:
        filename: output/metrics.base.svg
        token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        base: header, activity, community, repositories, metadata
    - name: Most used (with details)
      uses: lowlighter/metrics@latest
      with:
        filename: output/details.svg
        token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        base: ""
        repositories_skipped: chatbot-ui, gitHub-readme-stats-clone, PL0-compiler
        plugin_languages: yes
        plugin_languages_ignored: >-
          tex, less, qmake, lex, gnuplot
        plugin_languages_details: bytes-size, percentage
        plugin_languages_limit: 8
        plugin_followup: yes
        plugin_followup_indepth: yes
    - name: Compact display
      uses: lowlighter/metrics@latest
      with:
        filename: output/metrics.plugin.achievements.compact.svg
        token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        base: ""
        plugin_achievements: yes
        plugin_achievements_only: >-
          polyglot, stargazer, sponsor, deployer, member, maintainer, developer,
          scripter, packager, explorer, infographile, manager
        plugin_achievements_display: compact
        plugin_achievements_threshold: X

    - name: Check out repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install matplotlib

    - name: Fetch Qiita Profile Information
      run: |
        curl -H "Authorization: Bearer ${{ secrets.QIITA_TOKEN }}" "https://qiita.com/api/v2/yamamotoooon" > qiita_profile.json

    - name: Generate Qiita Profile Graph
      run: python generate_svg.py

    - name: Upload SVG
      uses: actions/upload-artifact@v3
      with:
        name: qiita-profile-graph
        path: output/qiita_profile.svg
